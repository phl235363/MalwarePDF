# import PyPDF2

# # Đọc file PDF
# with open('sample.pdf', 'rb') as file:
#     reader = PyPDF2.PdfReader(file)
#     num_pages = len(reader.pages)

#     # Thay đổi mã JavaScript trong file PDF
#     writer = PyPDF2.PdfWriter()
#     for page_num in range(num_pages):
#         page = reader.pages[page_num]
        
#         if '/AA' not in page:
#             page.Annots = []
        
#         annot = PyPDF2.generic.DictionaryObject()
#         annot.update({
#             '/Type': '/Annot',
#             '/Subtype': '/Widget',
#             '/AA': PyPDF2.generic.DictionaryObject({
#                 '/O': PyPDF2.generic.ArrayObject([
#                     PyPDF2.generic.createStringObject('app.alert("Hello");')
#                 ])
#             })
#         })
        
#         page.Annots.append(annot)
#         writer.add_page(page)

#     # Ghi file PDF mới chứa mã JavaScript thay đổi
#     with open('output.pdf', 'wb') as output_file:
#         writer.write(output_file)
import PyPDF2

# Open the PDF file
with open('sample.pdf', 'rb') as file:
    reader = PyPDF2.PdfReader(file)

    # Create a new PDF writer
    writer = PyPDF2.PdfWriter()

    # Iterate over the existing pages
    for page_num in range(len(reader.pages)):
        page = reader.pages[page_num]

        # Create a new blank page with the same dimensions as the existing page
        blank_page = writer.add_blank_page(width=page.mediabox.width, height=page.mediabox.height)

        # Copy the content from the existing page to the new blank page
        blank_page.merge_page(page)

        # Add JavaScript to the new blank page
        writer.add_js("app.alert('Hello');")

    # Save the modified PDF with JavaScript
    with open('output.pdf', 'wb') as output_file:
        writer.write(output_file)


